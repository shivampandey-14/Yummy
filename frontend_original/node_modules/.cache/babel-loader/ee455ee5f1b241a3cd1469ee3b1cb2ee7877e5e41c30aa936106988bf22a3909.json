{"ast":null,"code":"var _jsxFileName = \"/home/hlgsagar/Downloads/frontend_original (1)/frontend_original/src/components/courseRegistration.js\",\n  _s = $RefreshSig$();\nimport React, { useState, setState, useEffect } from \"react\";\nimport { api } from \"../util/api\";\nimport \"../style.css\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\n\nimport \"../style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CourseForm = _ref => {\n  _s();\n  let {\n    userData\n  } = _ref;\n  const [courseList, setCourseList] = useState([{\n    building: \"\",\n    course_id: {\n      capacity: 0,\n      course_code: \"\",\n      credits: 0,\n      name: \"\",\n      term: 0,\n      year: 0\n    },\n    course_schedule_id: 0,\n    day: \"\",\n    room: \"\",\n    time: \"\"\n  }]);\n  const [index, setIndex] = useState(-1);\n  const [open, setOpen] = useState(false);\n  const [selectedList, setSelectedList] = useState([]);\n  const [listDisplay, setListDisplay] = useState(false);\n  useEffect(() => {\n    // let user_id = Number(userData.department.department_id)\n\n    const fetchData = async () => {\n      const response = await fetch(`http://localhost:8080/courseSchedule/${Number(userData.employee_id)}/get`);\n      const newData = await response.json();\n      console.log(newData);\n      setCourseList(newData);\n      window.localStorage.setItem(\"courseList\", JSON.stringify(newData));\n    };\n    fetchData();\n  }, [userData]);\n  const handleAddEmployee = async index => {\n    let course_id = courseList[index].course_id.course_id;\n    const response = await fetch(`http://localhost:8080/course/${Number(userData.employee_id)}/add/${Number(course_id)}`);\n    const newData = await response.json();\n    console.log(newData);\n    setCourseList(newData);\n  };\n  const selectHandleChange = event => {\n    setIndex(event.target.value);\n  };\n  useEffect(() => {\n    const currentList = window.localStorage.getItem(\"currentList\");\n    if (currentList) {\n      setSelectedList(JSON.parse(currentList));\n      setListDisplay(true);\n    }\n  }, []);\n  const alertBox = () => {\n    confirmAlert({\n      title: \"Confirm to submit\",\n      message: \"Are you sure to select this course ?\",\n      buttons: [{\n        label: \"Yes\",\n        onClick: () => {\n          setOpen(false);\n          // console.log(courseList[index])\n\n          if (index == -1) return;\n          {\n            handleAddEmployee(index);\n          }\n          const curr = selectedList;\n          curr.push(courseList[index]);\n          setSelectedList(curr);\n          window.localStorage.setItem(\"currentList\", JSON.stringify(selectedList));\n        }\n      }, {\n        label: \"No\",\n        onClick: () => setOpen(false)\n      }]\n    });\n  };\n  const selectCourse = () => {\n    setOpen(true);\n    alertBox();\n  };\n  return (\n    /*#__PURE__*/\n    // {\n    // <div>\n    //     `hello`\n    // </div>\n    // }\n    // {\n    _jsxDEV(\"div\", {\n      className: \"course\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Registered Successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select courses from the list \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-control\",\n        onChange: selectHandleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Choose course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), courseList.map((c, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: i,\n          children: [c.day, \" \", \"-\", \" \", c.course_id.name, \" \", \":\", \" \", c.building, \" \", \"-\", \" \", c.time]\n        }, c.course_schedule_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: selectCourse,\n        children: \" ADD \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this), selectedList.map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [c.day, \" - \", c.course_id.name, \" - \", c.building, \" - \", c.time]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n      // <option value={i} key={c.course_schedule_id} >{c.day} {\"-\"} {c.course_id.name} {':'} {c.building} {'-'} {c.time}</option>\n      )]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(CourseForm, \"D3YxEix+LcsCWUkx1VCapV6KtFs=\");\n_c = CourseForm;\nexport default CourseForm;\nvar _c;\n$RefreshReg$(_c, \"CourseForm\");","map":{"version":3,"names":["React","useState","setState","useEffect","api","confirmAlert","CourseForm","userData","courseList","setCourseList","building","course_id","capacity","course_code","credits","name","term","year","course_schedule_id","day","room","time","index","setIndex","open","setOpen","selectedList","setSelectedList","listDisplay","setListDisplay","fetchData","response","fetch","Number","employee_id","newData","json","console","log","window","localStorage","setItem","JSON","stringify","handleAddEmployee","selectHandleChange","event","target","value","currentList","getItem","parse","alertBox","title","message","buttons","label","onClick","curr","push","selectCourse","map","c","i"],"sources":["/home/hlgsagar/Downloads/frontend_original (1)/frontend_original/src/components/courseRegistration.js"],"sourcesContent":["import React, { useState, setState, useEffect } from \"react\";\nimport { api } from \"../util/api\";\nimport \"../style.css\";\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\n\nimport \"../style.css\";\nconst CourseForm = ({ userData }) => {\n  const [courseList, setCourseList] = useState([\n    {\n      building: \"\",\n      course_id: {\n        capacity: 0,\n        course_code: \"\",\n        credits: 0,\n        name: \"\",\n        term: 0,\n        year: 0,\n      },\n      course_schedule_id: 0,\n      day: \"\",\n      room: \"\",\n      time: \"\",\n    },\n  ]);\n  const [index, setIndex] = useState(-1);\n  const [open, setOpen] = useState(false);\n  const [selectedList, setSelectedList] = useState([]);\n  const [listDisplay, setListDisplay] = useState(false);\n  useEffect(() => {\n    // let user_id = Number(userData.department.department_id)\n\n    const fetchData = async () => {\n      const response = await fetch(\n        `http://localhost:8080/courseSchedule/${Number(\n          userData.employee_id\n        )}/get`\n      );\n      const newData = await response.json();\n      console.log(newData);\n      setCourseList(newData);\n      window.localStorage.setItem(\"courseList\", JSON.stringify(newData));\n    };\n    fetchData();\n  }, [userData]);\n\n  const handleAddEmployee = async (index) => {\n    let course_id = courseList[index].course_id.course_id;\n\n    const response = await fetch(\n      `http://localhost:8080/course/${Number(\n        userData.employee_id\n      )}/add/${Number(course_id)}`\n    );\n    const newData = await response.json();\n    console.log(newData);\n    setCourseList(newData);\n  };\n\n  const selectHandleChange = (event) => {\n    setIndex(event.target.value);\n  };\n\n  useEffect(() => {\n    const currentList = window.localStorage.getItem(\"currentList\");\n    if (currentList) {\n      setSelectedList(JSON.parse(currentList));\n      setListDisplay(true);\n    }\n  }, []);\n\n  const alertBox = () => {\n    confirmAlert({\n      title: \"Confirm to submit\",\n      message: \"Are you sure to select this course ?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            setOpen(false);\n            // console.log(courseList[index])\n\n            if (index == -1) return;\n            {\n              handleAddEmployee(index);\n            }\n            const curr = selectedList;\n            curr.push(courseList[index]);\n            setSelectedList(curr);\n            window.localStorage.setItem(\n              \"currentList\",\n              JSON.stringify(selectedList)\n            );\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () => setOpen(false),\n        },\n      ],\n    });\n  };\n\n  const selectCourse = () => {\n    setOpen(true);\n    alertBox();\n  };\n\n  return (\n    // {\n    // <div>\n    //     `hello`\n    // </div>\n    // }\n    // {\n\n    <div className=\"course\">\n      <h3>Registered Successfully!</h3>\n      <p>Select courses from the list </p>\n      <select className=\"form-control\" onChange={selectHandleChange}>\n        <option value=\"\">Choose course</option>\n        {courseList.map((c, i) => (\n          <option value={i} key={c.course_schedule_id}>\n            {c.day} {\"-\"} {c.course_id.name} {\":\"} {c.building} {\"-\"} {c.time}\n          </option>\n        ))}\n      </select>\n      <button onClick={selectCourse}> ADD </button>\n\n      {selectedList.map((c, i) => (\n        <div>\n          <ul>\n            <li>\n              {c.day} - {c.course_id.name} - {c.building} - {c.time}\n            </li>\n          </ul>\n        </div>\n        // <option value={i} key={c.course_schedule_id} >{c.day} {\"-\"} {c.course_id.name} {':'} {c.building} {'-'} {c.time}</option>\n      ))}\n    </div>\n  );\n};\n\nexport default CourseForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}