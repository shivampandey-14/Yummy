{"ast":null,"code":"var _jsxFileName = \"/home/shivam/Desktop/ESD_Shivam/frontend_original/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport React, { useState, setState, useEffect } from \"react\";\nimport Header from \"./components/header\";\nimport RegistrationForm from \"./components/registration\";\nimport registerService from \"./services/register\";\nimport CourseForm from \"./components/courseRegistration\";\nimport Exit from \"./components/exit\";\nimport NavBar from \"./components/NavBar\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userData, setUserData] = useState(null);\n  // const [isSubmit, setIsSubmit] = useState(false);\n  const [selectedList, setSelectedList] = useState([]);\n\n  //starts here\n  const handleRegister = async details => {\n    try {\n      const userObject = await registerService.register(details);\n      if (!userObject) {\n        console.log(userObject);\n        setUserData(null);\n        alertBox(\"Email id already exists\");\n        return;\n      }\n      setUserData(userObject);\n      // console.log(userObject)\n      window.localStorage.setItem(\"loggedInUser\", JSON.stringify(userObject));\n      return userData;\n    } catch (exception) {\n      // setUserData(null)\n      alertBox(\"Choose correct department \");\n    }\n  };\n  const alertBox = m => {\n    confirmAlert({\n      title: \"Confirm to submit\",\n      message: m,\n      buttons: [{\n        label: \"Ok\",\n        onClick: () => {\n          const currList = window.localStorage.getItem(\"currentList\");\n          const courseList = window.localStorage.getItem(\"courseList\");\n          if (currList !== null) {\n            window.localStorage.removeItem(\"currentList\");\n            window.localStorage.removeItem(\"loggedInUser\");\n            window.localStorage.removeItem(\"courseList\");\n          } else if (courseList.length == 2) {\n            window.localStorage.removeItem(\"loggedInUser\");\n            window.localStorage.removeItem(\"courseList\");\n          }\n        }\n      }]\n    });\n  };\n  const handleSubmit = () => {\n    const currList = window.localStorage.getItem(\"currentList\");\n    const courseList = window.localStorage.getItem(\"courseList\");\n    //setSelectedList(currList)\n    console.log(courseList.length);\n    if (courseList.length == 2) {\n      alertBox(\"No course available\");\n      setUserData(null);\n    } else if (currList === null) {\n      alertBox(\"You have not selected any course\");\n      // setIsSubmit(false)\n    } else {\n      alertBox(\"Course(s) have been added successfully!\");\n      // window.localStorage.removeItem('currentList')\n      // window.localStorage.removeItem('loggedInUser')\n      setUserData(null);\n      // setIsSubmit(true)\n    }\n  };\n\n  // Effect Hook that parses the local storage for 'loggedInUser' and sets the \"user\" state if a valid match is found\n  // This enables user to login automatically without having to type in the credentials. Caching the login if you will.\n  useEffect(() => {\n    const loggedInUser = window.localStorage.getItem(\"loggedInUser\");\n    if (loggedInUser) setUserData(JSON.parse(loggedInUser));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [userData === null && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }, this), userData === null && /*#__PURE__*/_jsxDEV(RegistrationForm, {\n      startRegister: handleRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }, this), userData !== null && /*#__PURE__*/_jsxDEV(CourseForm, {\n      userData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }, this), userData !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"SUBMIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3rmar8LB4o9ypswFphT2aDoR/P4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","setState","useEffect","Header","RegistrationForm","registerService","CourseForm","Exit","NavBar","confirmAlert","App","userData","setUserData","selectedList","setSelectedList","handleRegister","details","userObject","register","console","log","alertBox","window","localStorage","setItem","JSON","stringify","exception","m","title","message","buttons","label","onClick","currList","getItem","courseList","removeItem","length","handleSubmit","loggedInUser","parse"],"sources":["/home/shivam/Desktop/ESD_Shivam/frontend_original/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState, setState, useEffect } from \"react\";\nimport Header from \"./components/header\";\nimport RegistrationForm from \"./components/registration\";\nimport registerService from \"./services/register\";\nimport CourseForm from \"./components/courseRegistration\";\nimport Exit from \"./components/exit\";\nimport NavBar from \"./components/NavBar\";\nimport { confirmAlert } from \"react-confirm-alert\";\n\nfunction App() {\n  const [userData, setUserData] = useState(null);\n  // const [isSubmit, setIsSubmit] = useState(false);\n  const [selectedList, setSelectedList] = useState([]);\n\n  //starts here\n  const handleRegister = async (details) => {\n    try {\n      const userObject = await registerService.register(details);\n\n      if (!userObject) {\n        console.log(userObject);\n        setUserData(null);\n        alertBox(\"Email id already exists\");\n        return;\n      }\n      setUserData(userObject);\n      // console.log(userObject)\n      window.localStorage.setItem(\"loggedInUser\", JSON.stringify(userObject));\n      return userData;\n    } catch (exception) {\n      // setUserData(null)\n      alertBox(\"Choose correct department \");\n    }\n  };\n\n  const alertBox = (m) => {\n    confirmAlert({\n      title: \"Confirm to submit\",\n      message: m,\n      buttons: [\n        {\n          label: \"Ok\",\n          onClick: () => {\n            const currList = window.localStorage.getItem(\"currentList\");\n            const courseList = window.localStorage.getItem(\"courseList\");\n\n            if (currList !== null) {\n              window.localStorage.removeItem(\"currentList\");\n              window.localStorage.removeItem(\"loggedInUser\");\n              window.localStorage.removeItem(\"courseList\");\n            } else if (courseList.length == 2) {\n              window.localStorage.removeItem(\"loggedInUser\");\n              window.localStorage.removeItem(\"courseList\");\n            }\n          },\n        },\n      ],\n    });\n  };\n\n  const handleSubmit = () => {\n    const currList = window.localStorage.getItem(\"currentList\");\n    const courseList = window.localStorage.getItem(\"courseList\");\n    //setSelectedList(currList)\n    console.log(courseList.length);\n\n    if (courseList.length == 2) {\n      alertBox(\"No course available\");\n      setUserData(null);\n    } else if (currList === null) {\n      alertBox(\"You have not selected any course\");\n      // setIsSubmit(false)\n    } else {\n      alertBox(\"Course(s) have been added successfully!\");\n      // window.localStorage.removeItem('currentList')\n      // window.localStorage.removeItem('loggedInUser')\n      setUserData(null);\n      // setIsSubmit(true)\n    }\n  };\n\n  // Effect Hook that parses the local storage for 'loggedInUser' and sets the \"user\" state if a valid match is found\n  // This enables user to login automatically without having to type in the credentials. Caching the login if you will.\n  useEffect(() => {\n    const loggedInUser = window.localStorage.getItem(\"loggedInUser\");\n    if (loggedInUser) setUserData(JSON.parse(loggedInUser));\n  }, []);\n  return (\n    <div className=\"App\">\n      {userData === null && <Header />}\n      {userData === null && <RegistrationForm startRegister={handleRegister} />}\n\n      {userData !== null && <CourseForm userData={userData} />}\n      {userData !== null && (\n        <div>\n          <button onClick={handleSubmit}>SUBMIT</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}