{"ast":null,"code":"var _jsxFileName = \"/home/shivam/Downloads/Final_project_Faculty_registration/frontend_original/src/components/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login(_ref) {\n  _s();\n  let {\n    onLogin\n  } = _ref;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const API_BASE_URL = \"http://localhost:8080\";\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/admin/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (!response.ok) {\n        if (response.status === 401) throw new Error(\"Invalid email or password\");\n        if (response.status === 404) throw new Error(\"Server endpoint not found\");\n        throw new Error(`Server responded with status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (data.token) {\n        window.localStorage.setItem(\"jwtToken\", data.token);\n        const user = {\n          email,\n          token: data.token\n        };\n        window.localStorage.setItem(\"loggedInUser\", JSON.stringify(user));\n        onLogin(user);\n        navigate(\"/register\");\n      } else {\n        throw new Error(\"No token received from server\");\n      }\n    } catch (err) {\n      setError(err.message || \"Login failed. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Admin Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          className: \"input\",\n          disabled: isLoading,\n          required: true,\n          placeholder: \"Enter your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"password\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"input\",\n          disabled: isLoading,\n          required: true,\n          placeholder: \"Enter your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        disabled: isLoading,\n        children: isLoading ? \"Logging in...\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"MaAX7EjpoNeGVjXuHX468o1zZdg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Login","onLogin","email","setEmail","password","setPassword","error","setError","isLoading","setIsLoading","navigate","API_BASE_URL","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","status","Error","data","json","token","window","localStorage","setItem","user","err","message","target","value"],"sources":["/home/shivam/Downloads/Final_project_Faculty_registration/frontend_original/src/components/login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport './Login.css';\n\nfunction Login({ onLogin }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const API_BASE_URL = \"http://localhost:8080\";\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/admin/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      });\n\n      if (!response.ok) {\n        if (response.status === 401) throw new Error(\"Invalid email or password\");\n        if (response.status === 404) throw new Error(\"Server endpoint not found\");\n        throw new Error(`Server responded with status: ${response.status}`);\n      }\n\n      const data = await response.json();\n\n      if (data.token) {\n        window.localStorage.setItem(\"jwtToken\", data.token);\n        const user = { email, token: data.token };\n        window.localStorage.setItem(\"loggedInUser\", JSON.stringify(user));\n        onLogin(user);\n        navigate(\"/register\");\n      } else {\n        throw new Error(\"No token received from server\");\n      }\n    } catch (err) {\n      setError(err.message || \"Login failed. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {/* Title */}\n      <h1 className=\"title\">Admin Login</h1>\n\n      {/* Form */}\n      <form onSubmit={handleLogin} className=\"form\">\n        <div className=\"form-group\">\n          <label className=\"label\" htmlFor=\"email\">Email:</label>\n          <input\n            id=\"email\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"input\"\n            disabled={isLoading}\n            required\n            placeholder=\"Enter your email\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label className=\"label\" htmlFor=\"password\">Password:</label>\n          <input\n            id=\"password\"\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"input\"\n            disabled={isLoading}\n            required\n            placeholder=\"Enter your password\"\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"submit-btn\"\n          disabled={isLoading}\n        >\n          {isLoading ? \"Logging in...\" : \"Login\"}\n        </button>\n      </form>\n\n      {/* Error Message */}\n      {error && <div className=\"error-message\">{error}</div>}\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}