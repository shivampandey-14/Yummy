{"ast":null,"code":"var _jsxFileName = \"/home/shivam/Desktop/ESD_Shivam/frontend_original/src/components/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login(_ref) {\n  _s();\n  let {\n    onLogin\n  } = _ref;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  // Replace this with your actual backend URL\n  const API_BASE_URL = \"http://localhost:8081\"; // or your Spring Boot server URL\n\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError(\"\");\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/admin/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          // Add CORS headers\n          'Access-Control-Allow-Origin': '*'\n        },\n        credentials: 'include',\n        // Include cookies if needed\n        body: JSON.stringify({\n          email: email,\n          password: password\n        })\n      });\n\n      // Log response for debugging\n      console.log('Response status:', response.status);\n\n      // Handle non-JSON responses\n      const contentType = response.headers.get(\"content-type\");\n      let data;\n      if (contentType && contentType.includes(\"application/json\")) {\n        data = await response.json();\n        console.log('Response data:', data);\n      } else {\n        const textData = await response.text();\n        console.log('Response text:', textData);\n        data = {\n          message: textData\n        };\n      }\n      if (response.ok) {\n        console.log('Login successful:', data);\n\n        // Store JWT token in localStorage\n        if (data.token) {\n          window.localStorage.setItem(\"jwtToken\", data.token);\n\n          // Create user object with email and token\n          const user = {\n            email: email,\n            token: data.token\n          };\n          window.localStorage.setItem(\"loggedInUser\", JSON.stringify(user));\n          onLogin(user);\n          navigate(\"/register\");\n        } else {\n          setError(\"Invalid response from server\");\n          console.error('No token in response:', data);\n        }\n      } else {\n        const errorMessage = data.message || \"Invalid email or password\";\n        setError(errorMessage);\n        console.error('Login failed:', errorMessage);\n      }\n    } catch (err) {\n      console.error(\"Login error details:\", err);\n      setError(`Connection error: ${err.message}. Please check if the server is running at ${API_BASE_URL}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-8 p-6 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6 text-center\",\n      children: \"Admin Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n          disabled: isLoading,\n          required: true,\n          placeholder: \"Enter your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\",\n          disabled: isLoading,\n          required: true,\n          placeholder: \"Enter your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        className: \"w-full py-2 px-4 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\",\n        children: isLoading ? \"Logging in...\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-3 bg-red-50 rounded-md\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-red-600 text-center\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), process.env.NODE_ENV === 'development' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-2 text-xs text-gray-500\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"API URL: \", API_BASE_URL, \"/api/admin/login\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"MaAX7EjpoNeGVjXuHX468o1zZdg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Login","onLogin","email","setEmail","password","setPassword","error","setError","isLoading","setIsLoading","navigate","API_BASE_URL","handleLogin","e","preventDefault","response","fetch","method","headers","credentials","body","JSON","stringify","console","log","status","contentType","get","data","includes","json","textData","text","message","ok","token","window","localStorage","setItem","user","errorMessage","err","target","value","process","env","NODE_ENV"],"sources":["/home/shivam/Desktop/ESD_Shivam/frontend_original/src/components/login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Login({ onLogin }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  // Replace this with your actual backend URL\n  const API_BASE_URL = \"http://localhost:8081\"; // or your Spring Boot server URL\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    setIsLoading(true);\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/admin/login`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Accept\": \"application/json\",\n          // Add CORS headers\n          'Access-Control-Allow-Origin': '*',\n        },\n        credentials: 'include', // Include cookies if needed\n        body: JSON.stringify({\n          email: email,\n          password: password,\n        }),\n      });\n\n      // Log response for debugging\n      console.log('Response status:', response.status);\n      \n      // Handle non-JSON responses\n      const contentType = response.headers.get(\"content-type\");\n      let data;\n      \n      if (contentType && contentType.includes(\"application/json\")) {\n        data = await response.json();\n        console.log('Response data:', data);\n      } else {\n        const textData = await response.text();\n        console.log('Response text:', textData);\n        data = { message: textData };\n      }\n\n      if (response.ok) {\n        console.log('Login successful:', data);\n        \n        // Store JWT token in localStorage\n        if (data.token) {\n          window.localStorage.setItem(\"jwtToken\", data.token);\n          \n          // Create user object with email and token\n          const user = {\n            email: email,\n            token: data.token,\n          };\n          \n          window.localStorage.setItem(\"loggedInUser\", JSON.stringify(user));\n          onLogin(user);\n          navigate(\"/register\");\n        } else {\n          setError(\"Invalid response from server\");\n          console.error('No token in response:', data);\n        }\n      } else {\n        const errorMessage = data.message || \"Invalid email or password\";\n        setError(errorMessage);\n        console.error('Login failed:', errorMessage);\n      }\n    } catch (err) {\n      console.error(\"Login error details:\", err);\n      setError(`Connection error: ${err.message}. Please check if the server is running at ${API_BASE_URL}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto mt-8 p-6 bg-white rounded-lg shadow-md\">\n      <h1 className=\"text-2xl font-bold mb-6 text-center\">Admin Login</h1>\n      \n      <form onSubmit={handleLogin} className=\"space-y-4\">\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium text-gray-700\">\n            Email:\n          </label>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            disabled={isLoading}\n            required\n            placeholder=\"Enter your email\"\n          />\n        </div>\n\n        <div className=\"space-y-2\">\n          <label className=\"block text-sm font-medium text-gray-700\">\n            Password:\n          </label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            disabled={isLoading}\n            required\n            placeholder=\"Enter your password\"\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={isLoading}\n          className=\"w-full py-2 px-4 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\"\n        >\n          {isLoading ? \"Logging in...\" : \"Login\"}\n        </button>\n      </form>\n\n      {error && (\n        <div className=\"mt-4 p-3 bg-red-50 rounded-md\">\n          <p className=\"text-sm text-red-600 text-center\">\n            {error}\n          </p>\n        </div>\n      )}\n\n      {/* Debug information */}\n      {process.env.NODE_ENV === 'development' && (\n        <div className=\"mt-4 p-2 text-xs text-gray-500\">\n          <p>API URL: {API_BASE_URL}/api/admin/login</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}